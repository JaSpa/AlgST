protocol Repeat (x:P) = More x (Repeat x) | Quit

type Seed : MU = Int
type RNG  : SL = !Repeat -Int.end

seedRNG : Seed -> RNG

randPair : Seed -> (Int, Int)
randPair seed =
  let c = seedRNG seed in
  let (a, c) =
    select More [-Int, end] c
      |> receive [Int, !Repeat -Int.end]
  in
  let (b, c) =
    select More [-Int, end] c
      |> receive [Int, !Repeat -Int.end]
  in
  let _ = select Quit [-Int, end] c in
  (a, b)
