protocol Repeat (x:P) = More x (Repeat x) | Quit

type Handler (p:P) = âˆ€(s:SL). ?p.s -> s

repeater : âˆ€(p:P). Handler p -> Handler (Repeat p)
repeater [p] serveP [s] c = case c of {
  Quit c -> c,
  More c -> serveP [?Repeat p.s] c |> repeater [p] serveP [s]
}
